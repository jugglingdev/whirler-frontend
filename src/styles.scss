
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$linkedin-carousel-primary: mat.define-palette(mat.$indigo-palette);
$linkedin-carousel-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$linkedin-carousel-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$linkedin-carousel-theme: mat.define-light-theme((
  color: (
    primary: $linkedin-carousel-primary,
    accent: $linkedin-carousel-accent,
    warn: $linkedin-carousel-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($linkedin-carousel-theme);

@import 'variables';
@import 'buttons';
@import 'quill/dist/quill.snow.css';

// RESET

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

// UTILITIES

.center {
  text-align: center;
}

.no-scroll {
  height: 100vh;
  width: 100vw;
  touch-action: none;
  -webkit-overflow-scrolling: none;
  overflow: hidden;
  overscroll-behavior: none;
}

// FONT

body {
  font-family: 'Quicksand', sans-serif;
  background-color: $primary-light;
}

button, input {
  font: inherit;
}
